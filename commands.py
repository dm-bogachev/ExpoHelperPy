import logging
from telegram import Update, InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove
from telegram.ext import ContextTypes

async def start_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    message = update.message.text if update.message.text else ""
    args = message.split()
    parameter = args[1] if len(args) > 1 else ""
    if parameter == "kinebotvideo":
        await video_command(update, context)
    elif parameter == "posmaterials":
        await pos_materials_command(update, context)
    else:
        await video_command(update, context)
        #await default_options_command(update, context)

async def default_options_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.message.chat_id
    text = "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Robowizard! –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –Ω–∏–∂–µ:"
    keyboard = ReplyKeyboardMarkup(
        [[KeyboardButton("–•–æ—á—É –≤–∏–¥–µ–æ"), KeyboardButton("POS –ú–∞—Ç–µ—Ä–∏–∞–ª—ã")]],
        resize_keyboard=True
    )
    await context.bot.send_message(chat_id, text, reply_markup=keyboard)

async def video_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    # –í–æ–∑–º–æ–∂–µ–Ω –≤—ã–∑–æ–≤ –∫–∞–∫ –∏–∑ –∫–æ–º–∞–Ω–¥—ã, —Ç–∞–∫ –∏ —á–µ—Ä–µ–∑ callback
    chat_id = update.message.chat_id if update.message else update.callback_query.message.chat_id
    text = (
        "üëã –≠—Ç–æ –∫–æ–º–∞–Ω–¥–∞ Robowizard - —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã –≤ –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ–π —Ä–æ–±–æ—Ç–∏–∑–∞—Ü–∏–∏ —É–∂–µ –±–æ–ª–µ–µ 15 –ª–µ—Ç! "
        "–ú—ã –ø–æ–º–æ–≥–∞–µ–º –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è–º –ø—Ä–æ–π—Ç–∏ –ø—É—Ç—å –æ—Ç –∞—É–¥–∏—Ç–∞ –¥–æ –≤–Ω–µ–¥—Ä–µ–Ω–∏—è.\n\n"
        "–°–ø–∞—Å–∏–±–æ –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ \"–ö–∏–Ω–µ–±–æ—Ç–∞\" –Ω–∞ –≤—ã—Å—Ç–∞–≤–∫–µ \"–ú–µ—Ç–∞–ª–ª–æ–æ–±—Ä–∞–±–æ—Ç–∫–∞ 2025\"!\n\n"
        "–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –≤–∏–¥–µ–æ 360¬∞, –Ω—É–∂–Ω–æ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ 6 –≤–æ–ø—Ä–æ—Å–æ–≤.\n\n"
        "–ì–æ—Ç–æ–≤—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å? üëá"
    )
    keyboard = InlineKeyboardMarkup([
        [InlineKeyboardButton("–î–∞, —Ö–æ—á—É –ø–æ–ª—É—á–∏—Ç—å –≤–∏–¥–µ–æ", callback_data="start_kinebot_questions")]
    ])
    await context.bot.send_message(chat_id, text, reply_markup=keyboard)

async def pos_materials_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.message.chat_id
    text = "–°–ø–∞—Å–∏–±–æ –∑–∞ –∏–Ω—Ç–µ—Ä–µ—Å –∫ –Ω–∞—à–∏–º –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º! –°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è POS-–º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤."
    await context.bot.send_message(chat_id, text)

async def ask_interest_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    # –í–æ–∑–º–æ–∂–µ–Ω –≤—ã–∑–æ–≤ –∫–∞–∫ –∏–∑ –∫–æ–º–∞–Ω–¥—ã, —Ç–∞–∫ –∏ —á–µ—Ä–µ–∑ callback
    chat_id = update.message.chat_id if update.message else update.callback_query.message.chat_id
    text = (
        "–í–æ–ø—Ä–æ—Å 6: –ù–∞—Å–∫–æ–ª—å–∫–æ –≤—ã –∏–ª–∏ –≤–∞—à–∞ –∫–æ–º–ø–∞–Ω–∏—è –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–Ω–∞ –≤ —Ä–µ—à–µ–Ω–∏—è—Ö –ø–æ –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ–π —Ä–æ–±–æ—Ç–∏–∑–∞—Ü–∏–∏ –≤ –±–ª–∏–∂–∞–π—à–∏–µ 1-2 –≥–æ–¥–∞?"
    )
    keyboard = InlineKeyboardMarkup([
        [InlineKeyboardButton("–ê–∫—Ç–∏–≤–Ω–æ –∏—â–µ–º —Ä–µ—à–µ–Ω–∏—è", callback_data="interest_active")],
        [InlineKeyboardButton("–ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ, —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–µ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏", callback_data="interest_considering")],
        [InlineKeyboardButton("–ü–æ–∫–∞ –Ω–µ –ø–ª–∞–Ω–∏—Ä—É–µ–º, –Ω–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ —É–∑–Ω–∞—Ç—å", callback_data="interest_not_now")],
        [InlineKeyboardButton("–ù–µ –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç", callback_data="interest_no")]
    ])
    await context.bot.send_message(chat_id, text, reply_markup=keyboard)
